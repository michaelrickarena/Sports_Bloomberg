# Generated by Django 4.2.16 on 2025-01-04 18:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeographyColumns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_table_catalog', models.TextField(blank=True, null=True)),
                ('f_table_schema', models.TextField(blank=True, null=True)),
                ('f_table_name', models.TextField(blank=True, null=True)),
                ('f_geography_column', models.TextField(blank=True, null=True)),
                ('coord_dimension', models.BigIntegerField(blank=True, null=True)),
                ('srid', models.BigIntegerField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geography_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeometryColumns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_table_catalog', models.TextField(blank=True, null=True)),
                ('f_table_schema', models.TextField(blank=True, null=True)),
                ('f_table_name', models.TextField(blank=True, null=True)),
                ('f_geometry_column', models.TextField(blank=True, null=True)),
                ('coord_dimension', models.BigIntegerField(blank=True, null=True)),
                ('srid', models.BigIntegerField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geometry_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moneyline',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bookie', models.TextField()),
                ('matchup_type', models.TextField()),
                ('home_team', models.TextField()),
                ('line_1', models.BigIntegerField()),
                ('away_team', models.TextField()),
                ('line_2', models.BigIntegerField()),
                ('event_timestamp', models.DateTimeField()),
                ('last_updated_timestamp', models.DateTimeField()),
                ('sport_type', models.TextField()),
            ],
            options={
                'db_table': 'moneyline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Overunder',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bookie', models.TextField()),
                ('matchup_type', models.TextField()),
                ('home_team', models.TextField()),
                ('away_team', models.TextField()),
                ('over_or_under_1', models.TextField()),
                ('over_under_total_1', models.FloatField()),
                ('over_under_line_1', models.BigIntegerField()),
                ('over_or_under_2', models.TextField()),
                ('over_under_total_2', models.FloatField()),
                ('over_under_line_2', models.BigIntegerField()),
                ('event_timestamp', models.DateTimeField()),
                ('last_updated_timestamp', models.DateTimeField()),
                ('sport_type', models.TextField()),
            ],
            options={
                'db_table': 'overunder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Props',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_updated_timestamp', models.DateTimeField()),
                ('bookie', models.TextField()),
                ('prop_type', models.TextField()),
                ('bet_type', models.TextField()),
                ('player_name', models.TextField()),
                ('betting_line', models.BigIntegerField()),
                ('betting_point', models.TextField()),
                ('sport_type', models.TextField()),
            ],
            options={
                'db_table': 'props',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scores',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('game_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('sport_title', models.TextField()),
                ('game_time', models.DateTimeField()),
                ('game_status', models.TextField()),
                ('last_updated_timestamp', models.DateTimeField(blank=True, null=True)),
                ('team1', models.TextField(blank=True, null=True)),
                ('score1', models.BigIntegerField(blank=True, null=True)),
                ('team2', models.TextField(blank=True, null=True)),
                ('score2', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srid', models.BigIntegerField(blank=True, null=True)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.BigIntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spreads',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bookie', models.TextField()),
                ('matchup_type', models.TextField()),
                ('home_team', models.TextField()),
                ('spread_1', models.FloatField()),
                ('line_1', models.BigIntegerField()),
                ('away_team', models.TextField()),
                ('spread_2', models.FloatField()),
                ('line_2', models.BigIntegerField()),
                ('event_timestamp', models.DateTimeField()),
                ('last_updated_timestamp', models.DateTimeField()),
                ('sport_type', models.TextField()),
            ],
            options={
                'db_table': 'spreads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpcomingGames',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('game_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sport_title', models.TextField()),
                ('event_timestamp', models.DateTimeField()),
                ('home_team', models.TextField()),
                ('away_team', models.TextField()),
            ],
            options={
                'db_table': 'upcoming_games',
                'managed': False,
            },
        ),
    ]
